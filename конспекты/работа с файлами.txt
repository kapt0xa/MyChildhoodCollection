открытие файла
!!!FILE *Xfile = fopen("filename.txt", "w")
		"r"	Создает файл для записи (по умолчанию файл открывается как текстовый).
		"w"	Создает файл для записи (по умолчанию файл открывается как текстовый).
		"а"	Дописывает информацию к концу файла (по умолчанию файл открывается как текстовый).
		"rb"	Открывает двоичный файл для чтения.
		"wb"	Создает двоичный файл для записи.
		"ab"	Дописывает информацию к концу двоичного файла.
		"r+"	 Открывает файл для чтения/записи (по умолчанию файл открывается как текстовый).
		"w+"	Создает файл для чтения/записи (по умолчанию файл открывается как текстовый).
		"а+"	Дописывает информацию к концу файла или создает файл для чтения/записи (по умолчанию открывается как текстовый файл).
		"r+b"	Открывает двоичный файл для чтения / записи.
		"w+b"	Создает файл для чтения / записи.
		"а+b"	  Дописывает информацию к концу файла или создает двоичный файл для чтения.
		"rt"	Открывает текстовый файл для чтения.
		"wt"	Открывает текстовый файл для записи.
		"at"	Дописывает информацию к концу текстового файла.
		"r+t"	Открывает текстовый файл для чтения/записи.
		"w+t"	Создает текстовый файл для чтения/записи.
		"a+t"	Открывает или создает текстовый файл для чтения/записи.
	b в конце-двоичный режим
	t в конце-тексторый режим
	r чтение. файл должен существовать
	r+ чтение обновление запись
	a дописывание в конце файла
	a+ дописывание с запретом изменять уже написанное
	w создание/обнуление + запись
	w+ создание/обнуление для чтения и записи
!!!fclose (Xfile2)
	закрывает файл, с которым работает указатель
!!!fpos_t *n;
	тип данных для хранения внутреннего указателя файла текстовом в режите работы
!!!fsetpos (Xfile, n)
	устанавливает позицию внут. указателя
!!!fputc (/*int*/'c', Xfile)
	записывает символ, указатель++
!!!fgetc (Xfile)
	возвращает символ под указателем, указатель++
!!!fgetpos (Xfile, n)
	возвращает в указатель позицию внутреннего указателя файла
!!!fseek (Xfile, 9, SEEK_CUR)
	SEEK_CUR текущее положение
	SEEK_END конец файла
	SEEK_SET начало файла
	смещение внут.указателя
feof (Xfile)
	проверяет, не достигнут ли конец файла, если не достигнут, то возвращает 0.
sprintf(craracters/*[]*/,"...",...)вывод данных в массив типа char


 freopen ("filename.txt", "r/w/a/w+/a+/r+", Xfile2)
	привязывает файл к другому указателю
 FILE *fdopen(int handle, char *mode)
  неясно
rename ("D:\old.txt","D:\games\saves\sv.txt")
	переименовывает или перемещает, если это возможено, файл. вслучае ошибки возвращает !0;
remove ("extra.txt")
	удаляет файл
rewrewind (Xfile)
	устанавливает внутр. указатель файла в начало
!!!FILE *buf = tmpfile();
	временный файл, удаляемый после закрытие. имя файла будет гарантированно отличаться от любого другого сущ. файла
clearerr (Xfile)
	сбрасывает индикаторы ошибки и конца файла.
	Когда потоковые функции не выполняются из-за возникновения ошибки или потому,
	что конец файла был достигнут. Поэтому один из этих внутренних показателей блокирует выполнение функций.
	Эти показатели сигнализируют об ошибке до тех пор, пока не вызвана одна из следующих функций: rewind, fseek, или fsetpos.
ferror (Xfile)
	как feof только про ошибки
fflush (Xfile)
	смутно ясно, возможно не нужно
fgets (Xfile)
	возвращает строку до конца строки или конца файла
fputs ("string", Xfile)
	записывает символ
/*long int*/ ftell (Xfile)
	возвращает значение указателя текущего потока в байтах для бинарного потока и че-то странное для текстового
size_t fread( void * ptrvoid, size_t size, size_t count, FILE * filestream );
	Функция fread считывает массив размером — count элементов, каждый из которых имеет размер size байт, из потока, и сохраняет его в блоке памяти, на который указывает ptrvoid
	указатель+=size*count
size_t fwrite( const void * ptrvoid, size_t size, size_t count, FILE * filestream );
	Функция fwrite записывает массив размером — count элементов, каждый из которых имеет размер size байт, в блок памяти, на который указывает ptrvoid — текущая позиция в потоке.
	Индикатор положения потока увеличивается на общее число записанных байтов.
	Общее количество записанных байт (count*)
getc~=fgetc
getchar()-считать клавишу
gets(craracters/*[]*/)- считать строку

printf....
fprintf (Xfile, "....", ...)
fscanf (Xfile...)
sscanf("hello 1 2 3 4 5", "%s%d", str, &i) чтение из массива(строки)
setbuf обойдусь
setvbuf тоже обойдусь
tmpnam	(char * string)создает имя временного файла обойдусь
ungetc( int character, FILE * filestream ) чет залупа какая то
puts (char *string)=printf("string\n")